import funkin.modding.module.Module;

import funkin.modding.events.callbacks.CallbackEvent;
import funkin.modding.events.callbacks.CallbackEventData;
import funkin.modding.events.callbacks.CallbackEventHolder;
import funkin.modding.events.callbacks.CallbackScriptEvent;

import funkin.ui.title.TitleState;
import funkin.ui.mainmenu.MainMenuState;
import funkin.ui.story.StoryMenuState;
import funkin.ui.freeplay.FreeplayState;

import funkin.util.ReflectUtil;

class CallbackEventTest extends Module
{
  var randomTestingEvent = new CallbackEvent('random-testing-event');
  var anotherRandomTestingEvent = new CallbackEvent('another-random-testing-event');
  var freeplayTestingEvent = new CallbackEvent('freeplay-testing-event');

  override public function new()
  {
    super('ce-test');

    randomTestingEvent.onInit = function() {
      trace('Hi');
    }
    randomTestingEvent.onCreate = function(eventdata:CallbackEventData) {
      if (eventdata.id == 'titlestate')
        trace('Hi in title state createa with data: '+eventdata.data);
    }

    anotherRandomTestingEvent.onInit = function() {
      trace('Hi I exist');
    }
    anotherRandomTestingEvent.onCreate = function(eventdata:CallbackEventData) {
        trace('Hi in '+eventdata.id);
    }

    freeplayTestingEvent.onUpdate = function(eventdata:CallbackEventData) {
      if (eventdata.id == "freeplaystate")
      {
        eventdata.data.ostName.text = FlxG.random.int();
      }
    }
  }

  override public function onStateChangeEnd(event:StateChangeScriptEvent)
  {
    if (TitleState.callbackEventHolder != null)
    {
      TitleState.callbackEventHolder.addCallbackEvent(anotherRandomTestingEvent);
      TitleState.callbackEventHolder.addCallbackEvent(randomTestingEvent);
    }

    if (MainMenuState.callbackEventHolder != null)
      MainMenuState.callbackEventHolder.addCallbackEvent(anotherRandomTestingEvent);

    if (StoryMenuState.callbackEventHolder != null)
      StoryMenuState.callbackEventHolder.addCallbackEvent(anotherRandomTestingEvent);

    if (FreeplayState.callbackEventHolder != null)
    {
      FreeplayState.callbackEventHolder.addCallbackEvent(anotherRandomTestingEvent);
      FreeplayState.callbackEventHolder.addCallbackEvent(freeplayTestingEvent);
    }
  }

  override public function onCallbackEvent(event:CallbackScriptEvent)
  {
    trace(event);
  }
}
